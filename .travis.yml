language: cpp
dist: Xenial
addons:
  apt:
    packages: xvfb libusb-1.0-0-dev mesa-common-dev libgl1-mesa-dev libxkbcommon-x11-0
env:
  global: 
    - RUNNER="non-interactive-qt-installer/qt_installer.sh"
    - OPENMSA_DIR="${TRAVIS_BUILD_DIR}/openMSA

before_install: 
install:
- git clone https://github.com/PTDreamer/openMSA.git ${TRAVIS_BUILD_DIR}/openMSA
- export OPENMSA_DIR="${TRAVIS_BUILD_DIR}/openMSA"
- if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
    sudo apt-get -y install xvfb libusb-1.0-0-dev mesa-common-dev libgl1-mesa-dev libxkbcommon-x11-0
    && qmake --version
    && wget -c -nv "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage"
    && chmod a+x linuxdeployqt-continuous-x86_64.AppImage
    && git clone https://github.com/skalee/non-interactive-qt-installer.git ${TRAVIS_BUILD_DIR}/non-interactive-qt-installer
    && cd ${TRAVIS_BUILD_DIR}/non-interactive-qt-installer
    && sudo xvfb-run -e /dev/stdout -s "-screen 0 1024x768x24" --auto-servernum --server-num=1 --error-file=/dev/stderr ./qt_installer.sh
    && cd ${TRAVIS_BUILD_DIR}
    && sudo ln -s /usr/lib/x86_64-linux-gnu/libGL.so.1 /usr/lib/libGL.so
  ;
  fi
- if [ "${TRAVIS_OS_NAME}" = "windows" ]; then
    git clone https://github.com/skalee/non-interactive-qt-installer.git ${TRAVIS_BUILD_DIR}/non-interactive-qt-installer
    && ${RUNNER}
  ;
  fi
script:
- if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
  /opt/Qt/5.12.2/gcc_64/bin/qmake --version
  && /opt/Qt/5.12.2/gcc_64/bin/qmake
  && make -j$(nproc)
  && ls -all
  && ${TRAVIS_BUILD_DIR}/linuxdeployqt-continuous-x86_64.AppImage ${TRAVIS_BUILD_DIR}/openMSAGui.desktop -verbose=1 -appimage -qmake=/opt/Qt/5.12.2/gcc_64/bin/qmake
  && mv openMSA*.AppImage openMSAGui.AppImage
  ;
  fi
- if [ "${TRAVIS_OS_NAME}" = "windows" ]; then
    cmd.exe /C '"C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Auxiliary\Build\vcvarsall.bat" amd64 && qmake'
    && cmd.exe /C '"C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Auxiliary\Build\vcvarsall.bat" amd64 && nmake'
    && dir
    && cmd.exe /C '"C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Auxiliary\Build\vcvarsall.bat" amd64 && windeployqt --qmldir qml release\openMSAGui.exe'
  ; 
  fi
- if [ "$TRAVIS_OS_NAME" = "windows" ]; then 
    choco install zip
    && cd release
    && zip openMSAGui.zip -r *
  ;
  fi
deploy:
  skip_cleanup: true
  provider: releases
  api_key:
    secure: Gk8LsFbaOu617MXqSWjRtSH84r2WaNAGuBXSA0fWA2rCtdaQtg9tJwK+r9JsM5zGDuQNj5QE4AZaiDIFu4MAnV+8jeB+v4mAODkPqoH/p1QG0KsyGGJGFowfx9LxU3IO88S+Ua6xh/ilngHXM5WB2K/Ld2EMttedvdJyW089OgUD2nVRzF2U9lMs5aYV9j+Ny/jtHfCTRySQJPVlzC3W/pz9eT+J1nh0hPRISzfNjh3ew1kW4Iw2GMVXbTmqppZIgoT2KZHkqOv+gx0KMBtWwJsEv01UQLsNNw1+pTRhfns89xRbe+HKR61Sb0YQulueh/ltAnZLfQZJE2Gj88PHOtxkFv4ilyChZ9g8sgxnM9PB5hRiuD7tQZgOjxrPIytluV03WfcFHL0vseJNwk0Lw42nlCtcIuINdMnP9T1QeD/IKFB8hCem0Bbrbj7SDU7uEAwov0f+EzHPCl6gXJtv8kacLm1hcfoPP2ri0N9ESGe78fnxyQ1LATtgNP4erxgZOzdHLTuB0v5szYO1YNsP26mU0aZYpfn56t9DIQv0m9FrRfIUK9plw4HZIjGGnxCGvD3uO93i6CSk3BNmSAN7Us5WYGXm7E5c2YUyefS/VxTh8xODk4y5oDwViRkBm77Adlp/vMP1HArkq72okQlKZo6afdvCG8VYdd0I2u16qWE=
  file: ${RELEASE_FILE}
  on:
    tags: true

matrix:
  include:
  - os: linux
    dist: Xenial
    env:
    - QT_INSTALLER_DOWNLOAD_NAME="qt-unified-linux-x64-online.run"
    - QT_INSTALLER_VARS="${TRAVIS_BUILD_DIR}/deployment/linux/vars_linux.js"
    - PATH="/opt/Qt/5.12.2/gcc_64/bin:${PATH}"
    - RELEASE_FILE="${TRAVIS_BUILD_DIR}/openMSAGui.AppImage"
  - os: windows
    env:
    - QT_INSTALLER_DOWNLOAD_NAME="qt-unified-windows-x86-online.exe"
    - QT_INSTALLER_VARS="${TRAVIS_BUILD_DIR}/deployment/windows/vars_windows.js"
    - PATH="/c/Qt/5.12.2/msvc2017_64/bin:${PATH}"
    - RELEASE_FILE="${TRAVIS_BUILD_DIR}\release\openMSAGui.zip"